1_A. Creating Tables

      create table customers (id int primary key,  name varchar(50), email varchar(50), address varchar(50));
      create table items  (id int primary key,  item_name varchar(50), price int );

1_B. Adding Values to the tables
      copy customers from '/home/kaushik/kaushik/postgres/data.csv' delimiter ',' csv;
      copy items from '/home/kaushik/kaushik/postgres/data_2.csv' delimiter ',' csv;

2. Put a constraint on customers table where email should be unique
      alter table customers add constraint unique_email unique(email);

3_A.Put a constraint on items table such that name of the item be unique
      alter table items add constraint unique_name unique(item_name);

3_B. Put a constraint on items table such that amount should not be null.
      alter table items alter column price set nit null;

4.Get all the values in the items table above 40000
      select * from items where price >40000;

5. Get all the values in items with price between 13000 and 50000
      select * from items where price > 13000 and price <50000;

6. Get all the values in the items table below 12000
      select * from items where price < 12000;

7. Add another field phone numbers to customer table and insert some values into it and put a constraint on this field that it should be unique.
      alter table customers add ph int;
      update customers set ph = 100 where id =1
      
8. Get all the customers whose name was repeated more than once in customers table
      select name from customers group by name having count(name) >1;

9. Get the first 5 items in items table according to their price(Ascending order).
      select item_name, price from items order by price asc limit 5;

10. Get all the values of customers which match the name “ra” & “ph”
      select * from customers where name like '%ra%' or name like '%ph%';

11. Get the customers who doesn’t live in Hyd
      select names from customers where address !='hyd';
12. Get the number of items in items table.
      select count(item_name) from items;
13. Get the total price of all items
      select sum(price) from items;
14. Get average price of all items
      select avg(price) from items;
